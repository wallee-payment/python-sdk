# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
name: Test & Upload Python Package

on:
   push:
    branches: [ master ]
   pull_request:
    branches: [ master ]
    
permissions:
  contents: read

jobs:

   test:
    strategy:
      matrix:
        python-version: [ '3.6', '3.7', '3.8', '3.9' ]
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
          
    - name: Install dependencies with ${{ matrix.python-version }}
      run: |
        python -m pip install --upgrade pip
        pip install -r test-requirements.txt
        python -m pip install build --user

    - name: Build package with ${{ matrix.python-version }}
      run: |
         echo "Starting build .."
         python -m unittest discover -s test/ -p 'test_*.py'
         
    - name: Build Tar Ball
      run: python -m build --sdist --outdir dist/ .

   release:
      needs: test
      runs-on: ubuntu-20.04
      steps:
         - uses: actions/checkout@v3
         - name: Set up Python
           uses: actions/setup-python@v3
           with:
               python-version: '3.8'
         - name: Install dependencies with ${{ matrix.python-version }}
           run: |
            python -m pip install --upgrade pip
            pip install -r test-requirements.txt
            python -m pip install build --user

         - name: Build Tar Ball
           run: python -m build --sdist --outdir dist/ .
      
         - name: Publish package
           uses: pypa/gh-action-pypi-publish@master
           with:
            password: ${{ secrets.PYPI_API_TOKEN }}
